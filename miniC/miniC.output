Terminals unused in grammar

   ELSE
   DQUOT_T
   SQUOT_T
   AMP_T


Grammar

    0 $accept: Program $end

    1 Program: DeclList FuncList
    2        | DeclList
    3        | FuncList

    4 DeclList: Declaration
    5         | DeclList Declaration

    6 FuncList: Function
    7         | FuncList Function

    8 Declaration: Type IdentList ';'

    9 IdentList: Identifier
   10          | IdentList ',' Identifier

   11 Identifier: ID
   12           | ID '[' INTNUM ']'

   13 ParamList: Parameter
   14          | ParamList ',' Parameter

   15 Parameter: Type Identifier

   16 Function: Type ID '(' ')' CompoundStmt
   17         | Type ID '(' ParamList ')' CompoundStmt

   18 Type: INT
   19     | FLOAT

   20 CompoundStmt: '{' '}'
   21             | '{' StmtList '}'
   22             | '{' DeclList StmtList '}'
   23             | '{' DeclList '}'

   24 StmtList: Stmt
   25         | StmtList Stmt

   26 Stmt: AssignStmt
   27     | CallStmt
   28     | RetStmt
   29     | While_s
   30     | For_s
   31     | If_s
   32     | CompoundStmt
   33     | ';'

   34 AssignStmt: Assign ';'

   35 Assign: ID '=' Expr
   36       | ID '[' Expr ']' '=' Expr

   37 CallStmt: Call ';'

   38 Call: ID '(' ')'
   39     | ID '(' ArgList ')'

   40 ArgList: Arg
   41        | ArgList ',' Arg

   42 Arg: Expr

   43 RetStmt: RETURN ';'
   44        | RETURN Expr ';'

   45 Expr: MINUS Expr
   46     | MathRel Eqltop Expr
   47     | MathRel
   48     | Call
   49     | Id_s

   50 MathRel: MathEql Relaop MathRel
   51        | MathEql

   52 MathEql: TERM Addiop MathEql
   53        | TERM

   54 TERM: FACTOR Multop TERM
   55     | FACTOR

   56 FACTOR: '(' Expr ')'
   57       | FLOATNUM
   58       | INTNUM

   59 Id_s: ID
   60     | ID '[' Expr ']'

   61 Addiop: MINUS
   62       | PLUS

   63 Multop: MULT
   64       | DIV

   65 Relaop: LE
   66       | GE
   67       | GT
   68       | LT

   69 Eqltop: EQ
   70       | NE

   71 While_s: WHILE '(' Expr ')' Stmt
   72        | DO Stmt WHILE '(' Expr ')' ';'

   73 For_s: FOR '(' Assign ';' Expr ';' Assign ')' Stmt

   74 If_s: IF '(' Expr ')' Stmt
   75     | IF '(' Expr ')' Stmt "ELSE" Stmt


Terminals, with rules where they appear

$end (0) 0
'(' (40) 16 17 38 39 56 71 72 73 74 75
')' (41) 16 17 38 39 56 71 72 73 74 75
',' (44) 10 14 41
';' (59) 8 33 34 37 43 44 72 73
'=' (61) 35 36
'[' (91) 12 36 60
']' (93) 12 36 60
'{' (123) 20 21 22 23
'}' (125) 20 21 22 23
error (256)
INTNUM (258) 12 58
FLOATNUM (259) 57
ID (260) 11 12 16 17 35 36 38 39 59 60
INT (261) 18
FLOAT (262) 19
MINUS (263) 45 61
PLUS (264) 62
MULT (265) 63
DIV (266) 64
LE (267) 65
GE (268) 66
EQ (269) 69
NE (270) 70
GT (271) 67
LT (272) 68
IF (273) 74 75
ELSE (274)
FOR (275) 73
WHILE (276) 71 72
DO (277) 72
RETURN (278) 43 44
DQUOT_T (279)
SQUOT_T (280)
AMP_T (281)
"ELSE" (282) 75
then (283)


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
Program (39)
    on left: 1 2 3, on right: 0
DeclList (40)
    on left: 4 5, on right: 1 2 5 22 23
FuncList (41)
    on left: 6 7, on right: 1 3 7
Declaration (42)
    on left: 8, on right: 4 5
IdentList (43)
    on left: 9 10, on right: 8 10
Identifier (44)
    on left: 11 12, on right: 9 10 15
ParamList (45)
    on left: 13 14, on right: 14 17
Parameter (46)
    on left: 15, on right: 13 14
Function (47)
    on left: 16 17, on right: 6 7
Type (48)
    on left: 18 19, on right: 8 15 16 17
CompoundStmt (49)
    on left: 20 21 22 23, on right: 16 17 32
StmtList (50)
    on left: 24 25, on right: 21 22 25
Stmt (51)
    on left: 26 27 28 29 30 31 32 33, on right: 24 25 71 72 73 74 75
AssignStmt (52)
    on left: 34, on right: 26
Assign (53)
    on left: 35 36, on right: 34 73
CallStmt (54)
    on left: 37, on right: 27
Call (55)
    on left: 38 39, on right: 37 48
ArgList (56)
    on left: 40 41, on right: 39 41
Arg (57)
    on left: 42, on right: 40 41
RetStmt (58)
    on left: 43 44, on right: 28
Expr (59)
    on left: 45 46 47 48 49, on right: 35 36 42 44 45 46 56 60 71 72
    73 74 75
MathRel (60)
    on left: 50 51, on right: 46 47 50
MathEql (61)
    on left: 52 53, on right: 50 51 52
TERM (62)
    on left: 54 55, on right: 52 53 54
FACTOR (63)
    on left: 56 57 58, on right: 54 55
Id_s (64)
    on left: 59 60, on right: 49
Addiop (65)
    on left: 61 62, on right: 52
Multop (66)
    on left: 63 64, on right: 54
Relaop (67)
    on left: 65 66 67 68, on right: 50
Eqltop (68)
    on left: 69 70, on right: 46
While_s (69)
    on left: 71 72, on right: 29
For_s (70)
    on left: 73, on right: 30
If_s (71)
    on left: 74 75, on right: 31


State 0

    0 $accept: . Program $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2

    Program      go to state 3
    DeclList     go to state 4
    FuncList     go to state 5
    Declaration  go to state 6
    Function     go to state 7
    Type         go to state 8


State 1

   18 Type: INT .

    $default  reduce using rule 18 (Type)


State 2

   19 Type: FLOAT .

    $default  reduce using rule 19 (Type)


State 3

    0 $accept: Program . $end

    $end  shift, and go to state 9


State 4

    1 Program: DeclList . FuncList
    2        | DeclList .
    5 DeclList: DeclList . Declaration

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2

    $default  reduce using rule 2 (Program)

    FuncList     go to state 10
    Declaration  go to state 11
    Function     go to state 7
    Type         go to state 8


State 5

    3 Program: FuncList .
    7 FuncList: FuncList . Function

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2

    $default  reduce using rule 3 (Program)

    Function  go to state 12
    Type      go to state 13


State 6

    4 DeclList: Declaration .

    $default  reduce using rule 4 (DeclList)


State 7

    6 FuncList: Function .

    $default  reduce using rule 6 (FuncList)


State 8

    8 Declaration: Type . IdentList ';'
   16 Function: Type . ID '(' ')' CompoundStmt
   17         | Type . ID '(' ParamList ')' CompoundStmt

    ID  shift, and go to state 14

    IdentList   go to state 15
    Identifier  go to state 16


State 9

    0 $accept: Program $end .

    $default  accept


State 10

    1 Program: DeclList FuncList .
    7 FuncList: FuncList . Function

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2

    $default  reduce using rule 1 (Program)

    Function  go to state 12
    Type      go to state 13


State 11

    5 DeclList: DeclList Declaration .

    $default  reduce using rule 5 (DeclList)


State 12

    7 FuncList: FuncList Function .

    $default  reduce using rule 7 (FuncList)


State 13

   16 Function: Type . ID '(' ')' CompoundStmt
   17         | Type . ID '(' ParamList ')' CompoundStmt

    ID  shift, and go to state 17


State 14

   11 Identifier: ID .
   12           | ID . '[' INTNUM ']'
   16 Function: Type ID . '(' ')' CompoundStmt
   17         | Type ID . '(' ParamList ')' CompoundStmt

    '['  shift, and go to state 18
    '('  shift, and go to state 19

    $default  reduce using rule 11 (Identifier)


State 15

    8 Declaration: Type IdentList . ';'
   10 IdentList: IdentList . ',' Identifier

    ';'  shift, and go to state 20
    ','  shift, and go to state 21


State 16

    9 IdentList: Identifier .

    $default  reduce using rule 9 (IdentList)


State 17

   16 Function: Type ID . '(' ')' CompoundStmt
   17         | Type ID . '(' ParamList ')' CompoundStmt

    '('  shift, and go to state 19


State 18

   12 Identifier: ID '[' . INTNUM ']'

    INTNUM  shift, and go to state 22


State 19

   16 Function: Type ID '(' . ')' CompoundStmt
   17         | Type ID '(' . ParamList ')' CompoundStmt

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    ')'    shift, and go to state 23

    ParamList  go to state 24
    Parameter  go to state 25
    Type       go to state 26


State 20

    8 Declaration: Type IdentList ';' .

    $default  reduce using rule 8 (Declaration)


State 21

   10 IdentList: IdentList ',' . Identifier

    ID  shift, and go to state 27

    Identifier  go to state 28


State 22

   12 Identifier: ID '[' INTNUM . ']'

    ']'  shift, and go to state 29


State 23

   16 Function: Type ID '(' ')' . CompoundStmt

    '{'  shift, and go to state 30

    CompoundStmt  go to state 31


State 24

   14 ParamList: ParamList . ',' Parameter
   17 Function: Type ID '(' ParamList . ')' CompoundStmt

    ','  shift, and go to state 32
    ')'  shift, and go to state 33


State 25

   13 ParamList: Parameter .

    $default  reduce using rule 13 (ParamList)


State 26

   15 Parameter: Type . Identifier

    ID  shift, and go to state 27

    Identifier  go to state 34


State 27

   11 Identifier: ID .
   12           | ID . '[' INTNUM ']'

    '['  shift, and go to state 18

    $default  reduce using rule 11 (Identifier)


State 28

   10 IdentList: IdentList ',' Identifier .

    $default  reduce using rule 10 (IdentList)


State 29

   12 Identifier: ID '[' INTNUM ']' .

    $default  reduce using rule 12 (Identifier)


State 30

   20 CompoundStmt: '{' . '}'
   21             | '{' . StmtList '}'
   22             | '{' . DeclList StmtList '}'
   23             | '{' . DeclList '}'

    ID      shift, and go to state 35
    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    IF      shift, and go to state 36
    FOR     shift, and go to state 37
    WHILE   shift, and go to state 38
    DO      shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '{'     shift, and go to state 30
    '}'     shift, and go to state 42

    DeclList      go to state 43
    Declaration   go to state 6
    Type          go to state 44
    CompoundStmt  go to state 45
    StmtList      go to state 46
    Stmt          go to state 47
    AssignStmt    go to state 48
    Assign        go to state 49
    CallStmt      go to state 50
    Call          go to state 51
    RetStmt       go to state 52
    While_s       go to state 53
    For_s         go to state 54
    If_s          go to state 55


State 31

   16 Function: Type ID '(' ')' CompoundStmt .

    $default  reduce using rule 16 (Function)


State 32

   14 ParamList: ParamList ',' . Parameter

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2

    Parameter  go to state 56
    Type       go to state 26


State 33

   17 Function: Type ID '(' ParamList ')' . CompoundStmt

    '{'  shift, and go to state 30

    CompoundStmt  go to state 57


State 34

   15 Parameter: Type Identifier .

    $default  reduce using rule 15 (Parameter)


State 35

   35 Assign: ID . '=' Expr
   36       | ID . '[' Expr ']' '=' Expr
   38 Call: ID . '(' ')'
   39     | ID . '(' ArgList ')'

    '['  shift, and go to state 58
    '('  shift, and go to state 59
    '='  shift, and go to state 60


State 36

   74 If_s: IF . '(' Expr ')' Stmt
   75     | IF . '(' Expr ')' Stmt "ELSE" Stmt

    '('  shift, and go to state 61


State 37

   73 For_s: FOR . '(' Assign ';' Expr ';' Assign ')' Stmt

    '('  shift, and go to state 62


State 38

   71 While_s: WHILE . '(' Expr ')' Stmt

    '('  shift, and go to state 63


State 39

   72 While_s: DO . Stmt WHILE '(' Expr ')' ';'

    ID      shift, and go to state 35
    IF      shift, and go to state 36
    FOR     shift, and go to state 37
    WHILE   shift, and go to state 38
    DO      shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '{'     shift, and go to state 30

    CompoundStmt  go to state 45
    Stmt          go to state 64
    AssignStmt    go to state 48
    Assign        go to state 49
    CallStmt      go to state 50
    Call          go to state 51
    RetStmt       go to state 52
    While_s       go to state 53
    For_s         go to state 54
    If_s          go to state 55


State 40

   43 RetStmt: RETURN . ';'
   44        | RETURN . Expr ';'

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    ';'       shift, and go to state 69
    '('       shift, and go to state 70

    Call     go to state 71
    Expr     go to state 72
    MathRel  go to state 73
    MathEql  go to state 74
    TERM     go to state 75
    FACTOR   go to state 76
    Id_s     go to state 77


State 41

   33 Stmt: ';' .

    $default  reduce using rule 33 (Stmt)


State 42

   20 CompoundStmt: '{' '}' .

    $default  reduce using rule 20 (CompoundStmt)


State 43

    5 DeclList: DeclList . Declaration
   22 CompoundStmt: '{' DeclList . StmtList '}'
   23             | '{' DeclList . '}'

    ID      shift, and go to state 35
    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    IF      shift, and go to state 36
    FOR     shift, and go to state 37
    WHILE   shift, and go to state 38
    DO      shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '{'     shift, and go to state 30
    '}'     shift, and go to state 78

    Declaration   go to state 11
    Type          go to state 44
    CompoundStmt  go to state 45
    StmtList      go to state 79
    Stmt          go to state 47
    AssignStmt    go to state 48
    Assign        go to state 49
    CallStmt      go to state 50
    Call          go to state 51
    RetStmt       go to state 52
    While_s       go to state 53
    For_s         go to state 54
    If_s          go to state 55


State 44

    8 Declaration: Type . IdentList ';'

    ID  shift, and go to state 27

    IdentList   go to state 15
    Identifier  go to state 16


State 45

   32 Stmt: CompoundStmt .

    $default  reduce using rule 32 (Stmt)


State 46

   21 CompoundStmt: '{' StmtList . '}'
   25 StmtList: StmtList . Stmt

    ID      shift, and go to state 35
    IF      shift, and go to state 36
    FOR     shift, and go to state 37
    WHILE   shift, and go to state 38
    DO      shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '{'     shift, and go to state 30
    '}'     shift, and go to state 80

    CompoundStmt  go to state 45
    Stmt          go to state 81
    AssignStmt    go to state 48
    Assign        go to state 49
    CallStmt      go to state 50
    Call          go to state 51
    RetStmt       go to state 52
    While_s       go to state 53
    For_s         go to state 54
    If_s          go to state 55


State 47

   24 StmtList: Stmt .

    $default  reduce using rule 24 (StmtList)


State 48

   26 Stmt: AssignStmt .

    $default  reduce using rule 26 (Stmt)


State 49

   34 AssignStmt: Assign . ';'

    ';'  shift, and go to state 82


State 50

   27 Stmt: CallStmt .

    $default  reduce using rule 27 (Stmt)


State 51

   37 CallStmt: Call . ';'

    ';'  shift, and go to state 83


State 52

   28 Stmt: RetStmt .

    $default  reduce using rule 28 (Stmt)


State 53

   29 Stmt: While_s .

    $default  reduce using rule 29 (Stmt)


State 54

   30 Stmt: For_s .

    $default  reduce using rule 30 (Stmt)


State 55

   31 Stmt: If_s .

    $default  reduce using rule 31 (Stmt)


State 56

   14 ParamList: ParamList ',' Parameter .

    $default  reduce using rule 14 (ParamList)


State 57

   17 Function: Type ID '(' ParamList ')' CompoundStmt .

    $default  reduce using rule 17 (Function)


State 58

   36 Assign: ID '[' . Expr ']' '=' Expr

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call     go to state 71
    Expr     go to state 84
    MathRel  go to state 73
    MathEql  go to state 74
    TERM     go to state 75
    FACTOR   go to state 76
    Id_s     go to state 77


State 59

   38 Call: ID '(' . ')'
   39     | ID '(' . ArgList ')'

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70
    ')'       shift, and go to state 85

    Call     go to state 71
    ArgList  go to state 86
    Arg      go to state 87
    Expr     go to state 88
    MathRel  go to state 73
    MathEql  go to state 74
    TERM     go to state 75
    FACTOR   go to state 76
    Id_s     go to state 77


State 60

   35 Assign: ID '=' . Expr

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call     go to state 71
    Expr     go to state 89
    MathRel  go to state 73
    MathEql  go to state 74
    TERM     go to state 75
    FACTOR   go to state 76
    Id_s     go to state 77


State 61

   74 If_s: IF '(' . Expr ')' Stmt
   75     | IF '(' . Expr ')' Stmt "ELSE" Stmt

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call     go to state 71
    Expr     go to state 90
    MathRel  go to state 73
    MathEql  go to state 74
    TERM     go to state 75
    FACTOR   go to state 76
    Id_s     go to state 77


State 62

   73 For_s: FOR '(' . Assign ';' Expr ';' Assign ')' Stmt

    ID  shift, and go to state 91

    Assign  go to state 92


State 63

   71 While_s: WHILE '(' . Expr ')' Stmt

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call     go to state 71
    Expr     go to state 93
    MathRel  go to state 73
    MathEql  go to state 74
    TERM     go to state 75
    FACTOR   go to state 76
    Id_s     go to state 77


State 64

   72 While_s: DO Stmt . WHILE '(' Expr ')' ';'

    WHILE  shift, and go to state 94


State 65

   58 FACTOR: INTNUM .

    $default  reduce using rule 58 (FACTOR)


State 66

   57 FACTOR: FLOATNUM .

    $default  reduce using rule 57 (FACTOR)


State 67

   38 Call: ID . '(' ')'
   39     | ID . '(' ArgList ')'
   59 Id_s: ID .
   60     | ID . '[' Expr ']'

    '['  shift, and go to state 95
    '('  shift, and go to state 59

    $default  reduce using rule 59 (Id_s)


State 68

   45 Expr: MINUS . Expr

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call     go to state 71
    Expr     go to state 96
    MathRel  go to state 73
    MathEql  go to state 74
    TERM     go to state 75
    FACTOR   go to state 76
    Id_s     go to state 77


State 69

   43 RetStmt: RETURN ';' .

    $default  reduce using rule 43 (RetStmt)


State 70

   56 FACTOR: '(' . Expr ')'

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call     go to state 71
    Expr     go to state 97
    MathRel  go to state 73
    MathEql  go to state 74
    TERM     go to state 75
    FACTOR   go to state 76
    Id_s     go to state 77


State 71

   48 Expr: Call .

    $default  reduce using rule 48 (Expr)


State 72

   44 RetStmt: RETURN Expr . ';'

    ';'  shift, and go to state 98


State 73

   46 Expr: MathRel . Eqltop Expr
   47     | MathRel .

    EQ  shift, and go to state 99
    NE  shift, and go to state 100

    $default  reduce using rule 47 (Expr)

    Eqltop  go to state 101


State 74

   50 MathRel: MathEql . Relaop MathRel
   51        | MathEql .

    LE  shift, and go to state 102
    GE  shift, and go to state 103
    GT  shift, and go to state 104
    LT  shift, and go to state 105

    $default  reduce using rule 51 (MathRel)

    Relaop  go to state 106


State 75

   52 MathEql: TERM . Addiop MathEql
   53        | TERM .

    MINUS  shift, and go to state 107
    PLUS   shift, and go to state 108

    $default  reduce using rule 53 (MathEql)

    Addiop  go to state 109


State 76

   54 TERM: FACTOR . Multop TERM
   55     | FACTOR .

    MULT  shift, and go to state 110
    DIV   shift, and go to state 111

    $default  reduce using rule 55 (TERM)

    Multop  go to state 112


State 77

   49 Expr: Id_s .

    $default  reduce using rule 49 (Expr)


State 78

   23 CompoundStmt: '{' DeclList '}' .

    $default  reduce using rule 23 (CompoundStmt)


State 79

   22 CompoundStmt: '{' DeclList StmtList . '}'
   25 StmtList: StmtList . Stmt

    ID      shift, and go to state 35
    IF      shift, and go to state 36
    FOR     shift, and go to state 37
    WHILE   shift, and go to state 38
    DO      shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '{'     shift, and go to state 30
    '}'     shift, and go to state 113

    CompoundStmt  go to state 45
    Stmt          go to state 81
    AssignStmt    go to state 48
    Assign        go to state 49
    CallStmt      go to state 50
    Call          go to state 51
    RetStmt       go to state 52
    While_s       go to state 53
    For_s         go to state 54
    If_s          go to state 55


State 80

   21 CompoundStmt: '{' StmtList '}' .

    $default  reduce using rule 21 (CompoundStmt)


State 81

   25 StmtList: StmtList Stmt .

    $default  reduce using rule 25 (StmtList)


State 82

   34 AssignStmt: Assign ';' .

    $default  reduce using rule 34 (AssignStmt)


State 83

   37 CallStmt: Call ';' .

    $default  reduce using rule 37 (CallStmt)


State 84

   36 Assign: ID '[' Expr . ']' '=' Expr

    ']'  shift, and go to state 114


State 85

   38 Call: ID '(' ')' .

    $default  reduce using rule 38 (Call)


State 86

   39 Call: ID '(' ArgList . ')'
   41 ArgList: ArgList . ',' Arg

    ','  shift, and go to state 115
    ')'  shift, and go to state 116


State 87

   40 ArgList: Arg .

    $default  reduce using rule 40 (ArgList)


State 88

   42 Arg: Expr .

    $default  reduce using rule 42 (Arg)


State 89

   35 Assign: ID '=' Expr .

    $default  reduce using rule 35 (Assign)


State 90

   74 If_s: IF '(' Expr . ')' Stmt
   75     | IF '(' Expr . ')' Stmt "ELSE" Stmt

    ')'  shift, and go to state 117


State 91

   35 Assign: ID . '=' Expr
   36       | ID . '[' Expr ']' '=' Expr

    '['  shift, and go to state 58
    '='  shift, and go to state 60


State 92

   73 For_s: FOR '(' Assign . ';' Expr ';' Assign ')' Stmt

    ';'  shift, and go to state 118


State 93

   71 While_s: WHILE '(' Expr . ')' Stmt

    ')'  shift, and go to state 119


State 94

   72 While_s: DO Stmt WHILE . '(' Expr ')' ';'

    '('  shift, and go to state 120


State 95

   60 Id_s: ID '[' . Expr ']'

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call     go to state 71
    Expr     go to state 121
    MathRel  go to state 73
    MathEql  go to state 74
    TERM     go to state 75
    FACTOR   go to state 76
    Id_s     go to state 77


State 96

   45 Expr: MINUS Expr .

    $default  reduce using rule 45 (Expr)


State 97

   56 FACTOR: '(' Expr . ')'

    ')'  shift, and go to state 122


State 98

   44 RetStmt: RETURN Expr ';' .

    $default  reduce using rule 44 (RetStmt)


State 99

   69 Eqltop: EQ .

    $default  reduce using rule 69 (Eqltop)


State 100

   70 Eqltop: NE .

    $default  reduce using rule 70 (Eqltop)


State 101

   46 Expr: MathRel Eqltop . Expr

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call     go to state 71
    Expr     go to state 123
    MathRel  go to state 73
    MathEql  go to state 74
    TERM     go to state 75
    FACTOR   go to state 76
    Id_s     go to state 77


State 102

   65 Relaop: LE .

    $default  reduce using rule 65 (Relaop)


State 103

   66 Relaop: GE .

    $default  reduce using rule 66 (Relaop)


State 104

   67 Relaop: GT .

    $default  reduce using rule 67 (Relaop)


State 105

   68 Relaop: LT .

    $default  reduce using rule 68 (Relaop)


State 106

   50 MathRel: MathEql Relaop . MathRel

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    '('       shift, and go to state 70

    MathRel  go to state 124
    MathEql  go to state 74
    TERM     go to state 75
    FACTOR   go to state 76


State 107

   61 Addiop: MINUS .

    $default  reduce using rule 61 (Addiop)


State 108

   62 Addiop: PLUS .

    $default  reduce using rule 62 (Addiop)


State 109

   52 MathEql: TERM Addiop . MathEql

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    '('       shift, and go to state 70

    MathEql  go to state 125
    TERM     go to state 75
    FACTOR   go to state 76


State 110

   63 Multop: MULT .

    $default  reduce using rule 63 (Multop)


State 111

   64 Multop: DIV .

    $default  reduce using rule 64 (Multop)


State 112

   54 TERM: FACTOR Multop . TERM

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    '('       shift, and go to state 70

    TERM    go to state 126
    FACTOR  go to state 76


State 113

   22 CompoundStmt: '{' DeclList StmtList '}' .

    $default  reduce using rule 22 (CompoundStmt)


State 114

   36 Assign: ID '[' Expr ']' . '=' Expr

    '='  shift, and go to state 127


State 115

   41 ArgList: ArgList ',' . Arg

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call     go to state 71
    Arg      go to state 128
    Expr     go to state 88
    MathRel  go to state 73
    MathEql  go to state 74
    TERM     go to state 75
    FACTOR   go to state 76
    Id_s     go to state 77


State 116

   39 Call: ID '(' ArgList ')' .

    $default  reduce using rule 39 (Call)


State 117

   74 If_s: IF '(' Expr ')' . Stmt
   75     | IF '(' Expr ')' . Stmt "ELSE" Stmt

    ID      shift, and go to state 35
    IF      shift, and go to state 36
    FOR     shift, and go to state 37
    WHILE   shift, and go to state 38
    DO      shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '{'     shift, and go to state 30

    CompoundStmt  go to state 45
    Stmt          go to state 129
    AssignStmt    go to state 48
    Assign        go to state 49
    CallStmt      go to state 50
    Call          go to state 51
    RetStmt       go to state 52
    While_s       go to state 53
    For_s         go to state 54
    If_s          go to state 55


State 118

   73 For_s: FOR '(' Assign ';' . Expr ';' Assign ')' Stmt

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call     go to state 71
    Expr     go to state 130
    MathRel  go to state 73
    MathEql  go to state 74
    TERM     go to state 75
    FACTOR   go to state 76
    Id_s     go to state 77


State 119

   71 While_s: WHILE '(' Expr ')' . Stmt

    ID      shift, and go to state 35
    IF      shift, and go to state 36
    FOR     shift, and go to state 37
    WHILE   shift, and go to state 38
    DO      shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '{'     shift, and go to state 30

    CompoundStmt  go to state 45
    Stmt          go to state 131
    AssignStmt    go to state 48
    Assign        go to state 49
    CallStmt      go to state 50
    Call          go to state 51
    RetStmt       go to state 52
    While_s       go to state 53
    For_s         go to state 54
    If_s          go to state 55


State 120

   72 While_s: DO Stmt WHILE '(' . Expr ')' ';'

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call     go to state 71
    Expr     go to state 132
    MathRel  go to state 73
    MathEql  go to state 74
    TERM     go to state 75
    FACTOR   go to state 76
    Id_s     go to state 77


State 121

   60 Id_s: ID '[' Expr . ']'

    ']'  shift, and go to state 133


State 122

   56 FACTOR: '(' Expr ')' .

    $default  reduce using rule 56 (FACTOR)


State 123

   46 Expr: MathRel Eqltop Expr .

    $default  reduce using rule 46 (Expr)


State 124

   50 MathRel: MathEql Relaop MathRel .

    $default  reduce using rule 50 (MathRel)


State 125

   52 MathEql: TERM Addiop MathEql .

    $default  reduce using rule 52 (MathEql)


State 126

   54 TERM: FACTOR Multop TERM .

    $default  reduce using rule 54 (TERM)


State 127

   36 Assign: ID '[' Expr ']' '=' . Expr

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call     go to state 71
    Expr     go to state 134
    MathRel  go to state 73
    MathEql  go to state 74
    TERM     go to state 75
    FACTOR   go to state 76
    Id_s     go to state 77


State 128

   41 ArgList: ArgList ',' Arg .

    $default  reduce using rule 41 (ArgList)


State 129

   74 If_s: IF '(' Expr ')' Stmt .
   75     | IF '(' Expr ')' Stmt . "ELSE" Stmt

    "ELSE"  shift, and go to state 135

    $default  reduce using rule 74 (If_s)


State 130

   73 For_s: FOR '(' Assign ';' Expr . ';' Assign ')' Stmt

    ';'  shift, and go to state 136


State 131

   71 While_s: WHILE '(' Expr ')' Stmt .

    $default  reduce using rule 71 (While_s)


State 132

   72 While_s: DO Stmt WHILE '(' Expr . ')' ';'

    ')'  shift, and go to state 137


State 133

   60 Id_s: ID '[' Expr ']' .

    $default  reduce using rule 60 (Id_s)


State 134

   36 Assign: ID '[' Expr ']' '=' Expr .

    $default  reduce using rule 36 (Assign)


State 135

   75 If_s: IF '(' Expr ')' Stmt "ELSE" . Stmt

    ID      shift, and go to state 35
    IF      shift, and go to state 36
    FOR     shift, and go to state 37
    WHILE   shift, and go to state 38
    DO      shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '{'     shift, and go to state 30

    CompoundStmt  go to state 45
    Stmt          go to state 138
    AssignStmt    go to state 48
    Assign        go to state 49
    CallStmt      go to state 50
    Call          go to state 51
    RetStmt       go to state 52
    While_s       go to state 53
    For_s         go to state 54
    If_s          go to state 55


State 136

   73 For_s: FOR '(' Assign ';' Expr ';' . Assign ')' Stmt

    ID  shift, and go to state 91

    Assign  go to state 139


State 137

   72 While_s: DO Stmt WHILE '(' Expr ')' . ';'

    ';'  shift, and go to state 140


State 138

   75 If_s: IF '(' Expr ')' Stmt "ELSE" Stmt .

    $default  reduce using rule 75 (If_s)


State 139

   73 For_s: FOR '(' Assign ';' Expr ';' Assign . ')' Stmt

    ')'  shift, and go to state 141


State 140

   72 While_s: DO Stmt WHILE '(' Expr ')' ';' .

    $default  reduce using rule 72 (While_s)


State 141

   73 For_s: FOR '(' Assign ';' Expr ';' Assign ')' . Stmt

    ID      shift, and go to state 35
    IF      shift, and go to state 36
    FOR     shift, and go to state 37
    WHILE   shift, and go to state 38
    DO      shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '{'     shift, and go to state 30

    CompoundStmt  go to state 45
    Stmt          go to state 142
    AssignStmt    go to state 48
    Assign        go to state 49
    CallStmt      go to state 50
    Call          go to state 51
    RetStmt       go to state 52
    While_s       go to state 53
    For_s         go to state 54
    If_s          go to state 55


State 142

   73 For_s: FOR '(' Assign ';' Expr ';' Assign ')' Stmt .

    $default  reduce using rule 73 (For_s)
